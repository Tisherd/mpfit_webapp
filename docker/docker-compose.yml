services:
  php:
    build:
      context: ./..
      dockerfile: ./docker/php/Dockerfile
    container_name: ${APP_NAME}_php
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./../:/var/www
      - ./php/ini/${APP_ENV}.ini:/usr/local/etc/php/conf.d/php.ini:ro
    depends_on:
      - mysql
    networks:
      - app-network

  nginx:
    image: nginx:1.27.3-alpine
    container_name: ${APP_NAME}_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./../public:/var/www/public
      - ./../storage/app/public:/var/www/storage/app/public
      - ./nginx/conf.d/${APP_ENV}.conf:/etc/nginx/conf.d/app.conf:ro
    depends_on:
      - php
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: ${APP_NAME}_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
